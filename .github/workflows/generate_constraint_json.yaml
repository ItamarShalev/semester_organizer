name: Generate constraint json data

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  UpdateNewGenerated:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.1.1
    - name: Set up Python 3.13
      uses: actions/setup-python@v5.0.0
      with:
        python-version: "3.13"
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r development_requirements.txt
    - name: Clear and create log file
      run: |
        rm -rf log.txt
        touch log.txt
    - name: Extract secrets
      shell: bash
      run: |
        mkdir -p src/database
        rm -rf src/database/user_data.txt
        touch src/database/user_data.txt
        echo ${{ secrets.USERNAME_LEVNET }} >> src/database/user_data.txt
        echo ${{ secrets.PASSWORD_LEVNET }} >> src/database/user_data.txt
    - name: Run python update script flow
      run: |
        python main.py --flow update_generated_json_data
    - name: Commit changes if there are
      id: commit_changes
      run: |
        git config --local user.email "itamar1111111@gmail.com"
        git config --local user.name "Itamar Shalev"
        find src/algorithms/generated_data -type f | grep -v "personal" | xargs git add --force
        if git diff --quiet && git diff --staged --quiet; then
            echo "No changes to commit."
            echo "should_push=false" >> $GITHUB_OUTPUT
        else
            git commit -sm "[AUTO] algorithms: Generate constraint courses json data."
            echo "Changes committed."
            echo "should_push=true" >> $GITHUB_OUTPUT
        fi
    - name: Push to main
      if: ${{ steps.commit_changes.outputs.should_push == 'true' }}
      uses: CasperWA/push-protected@v2
      with:
        token: ${{ secrets.SPEICAL_TOKEN }}
        branch: main
        force: True
