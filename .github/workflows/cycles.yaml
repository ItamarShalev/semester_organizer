name: Code checks

on:
  push:
  pull_request:

jobs:

  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.1.1
    - name: Set up Python 3.13
      uses: actions/setup-python@v5.0.0
      with:
        python-version: "3.13"
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r config/development_requirements.txt
    - name: Analysing the code with pylint
      run: |
        pylint --rcfile=config/.pylintrc $(git ls-files '*.py')

  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          submodules: 'true'
          token: ${{ secrets.SPEICAL_TOKEN }}
      - name: Set up Python 3.13
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.13"
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r config/development_requirements.txt
      - name: Analysing the code with pycodestyle
        run: |
          pycodestyle --config config/setup.cfg $(git ls-files '*.py')

  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          submodules: 'true'
          token: ${{ secrets.SPEICAL_TOKEN }}
      - name: Set up Python 3.13
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.13"
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r config/development_requirements.txt
      - name: Extract secrets
        run: |
          mkdir -p src/database
          rm -rf src/database/user_data.txt
          touch src/database/user_data.txt
          echo ${{ secrets.USERNAME_LEVNET }} >> src/database/user_data.txt
          echo ${{ secrets.PASSWORD_LEVNET }} >> src/database/user_data.txt
      - name: Run pytest
        run: |
          export JUPYTER_PLATFORM_DIRS=1
          jupyter --paths
          coverage run --rcfile="config/.coveragerc_ci_cd" -m pytest $(git ls-files 'test_*.py') -c config/pytest.ini -s -v -m "not network"
      - name: Run coverage
        run: |
          coverage report --rcfile="config/.coveragerc_ci_cd" -m --fail-under=100
